//
//  Services.m
//
//  Creates a list of the services available with the  prefix.
//  Generated by Sudz-C (https://github.com/jkichline/sudzc)
//

#import "Services.h"


@interface Services ()

@property (strong, nonatomic) StockQuote *stockQuote;

@end


#pragma mark -

@implementation Services

- (id)initWithServer:(NSString *)serverName
{
    self = [self init];
    if (self) {
        _server = serverName;
    }

    return self;
}

+ (Services *)service
{
    return (Services *)[[Services alloc] init];
}

+ (Services *)serviceWithServer:(NSString *)serverName
{
    return (Services *)[[Services alloc] initWithServer:serverName];
}

#pragma mark Methods

- (void)setLogging:(BOOL)value
{
    _logging = value;
    [self updateServices];
}

- (void)setServer:(NSString *)value
{
    _server = value;
    [self updateServices];
}

- (void)updateServices
{
    
    [self updateService:self.stockQuote];
}

- (void)updateService:(SoapService *)service
{
    service.logging = self.logging;
    if (self.server == nil || self.server.length < 1) {
        return;
    }

    service.serviceUrlString = [service.serviceUrlString stringByReplacingOccurrencesOfString:self.defaultServer
                                                                                   withString:self.server];
}


#pragma mark -

        
- (StockQuote *)stockQuote
{
    if (_stockQuote == nil) {
        _stockQuote = [[StockQuote alloc] init];
    }
    return _stockQuote;
}
        @end